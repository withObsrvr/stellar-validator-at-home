version: "3.8"

services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=stellar
      - POSTGRES_PASSWORD=stellar
      - POSTGRES_DB=stellar_prod
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stellar"]
      interval: 10s
      timeout: 5s
      retries: 5

  stellar-core:
    build:
      context: ./stellar-core
    volumes:
      - ./data/stellar-core:/data
      - ./data/history-archives:/history-archives
    ports:
      - "11625:11625"
      - "11626:11626"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE=postgresql://stellar:stellar@postgres:5432/stellar_prod

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/history-archives:/usr/share/nginx/html/history
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - stellar-core
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
